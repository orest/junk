@model IEnumerable<MyProjects.Models.ProjectVm>

@{
    ViewBag.Title = "Index";
}

<h2>Projects</h2>

<div class="row">
    <div class="col-md-3 ">

    </div>
    <div class="col-md-3">
        @Html.ActionLink("Active Only", "Index", new { activeOnly = true }, new { @class = "btn btn-primary " })
        @Html.ActionLink("All Projects", "Index", new { activeOnly = false }, new { @class = "btn btn-primary " })
    </div>
    <div class="col-md-3"></div>
</div>
<p class="text-right">
    
    <a class="btn btn-success" href="@Url.Action("Create")">
        <span class="glyphicon glyphicon-plus-sign"></span> Create New 
    </a>
</p>
<table class="table table-striped">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Project.Client.CompanyName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Project.Title)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.Project.Rate)
        </th>


        <th>This Week</th>
        <th>This Session</th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Project.Client.CompanyName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Project.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Project.Rate)
            </td>

            <td>
                @item.TotalHours / @Html.DisplayFor(modelItem => item.Project.MaxHoursPerWeek)
            </td>
            <td>
                @if (item.HasActiveLog)
                {
                    <span data-id="@item.Project.ProjectId" class="active-project">0</span> @:minutes
                }
            </td>
            <td>

                @if (item.HasActiveLog)
                {

                    <button class="btn btn-primary btn-sm  btn-warning stop" data-id="@item.Project.ProjectId">
                        <span class="glyphicon glyphicon-stop"></span> &nbsp; Stop
                    </button>

                }
                else
                {

                    @Html.ActionLink("Start", "Start", new { id = item.Project.ProjectId }, new { @class = "btn btn-success btn-sm" })
                }

                @Html.ActionLink("Edit", "Edit", new { id = item.Project.ProjectId }) |
                @*@Html.ActionLink("Details", "Details", new { id = item.Project.ProjectId }) |*@
                @Html.ActionLink("Client ", "Details", "Clients", new { id = item.Project.ClientId }, null) |
                @Html.ActionLink("Log ", "Index", "Logs", new { projectId = item.Project.ProjectId }, null)



                @*@Html.ActionLink("Delete", "Delete", new { id=item.ProjectId })*@
            </td>
        </tr>
    }

</table>

@Html.Partial("_SubmitTime")

@section scripts
{

    <script>
        var intervalId;
        $(function () {

            $(".stop").on("click", function () {

                $("#id").val($(this).data("id"));


                $('#modConfirm').modal({
                    keyboard: false
                });
            });
            updateTimeupdateTime();

            intervalId = setInterval(updateTimeupdateTime, 60000);
        });

        function updateTimeupdateTime() {
            var el = $(".active-project");
            if (el && el.length > 0) {
                var projectId = $(".active-project").data("id");
                $.get("Projects/gettime/" + projectId, function (data) {
                    el.text(data.Elapsed);
                });
            } else {
                clearInterval(intervalId);
            }

        }
    </script>
}
